/*! For license information please see main.bundle.js.LICENSE.txt */
(()=>{"use strict";var e,t,s,r={"./src/animate-effect.js":(e,t,s)=>{s.r(t),s.d(t,{animateEffect:()=>r});var r=function(){window.addEventListener("DOMContentLoaded",(function(){e()}));var e=function(){var e=document.querySelectorAll(".js-scroll"),t=function(){e.forEach((function(e){var t;!function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return e.getBoundingClientRect().top<=(window.innerHeight||document.documentElement.clientHeight)/t}(e,1.25)?function(e){return e.getBoundingClientRect().top>(window.innerHeight||document.documentElement.clientHeight)}(e)&&function(e){e.classList.remove("animate__animated"),e.classList.remove("animate__fadeInUp"),e.classList.add("hidden")}(e):((t=e).classList.add("animate__animated"),t.classList.add("animate__fadeInUp"),t.classList.remove("hidden"))}))};window.addEventListener("scroll",(function(){t()})),t()}}},"./src/index.js":(e,t,s)=>{s.r(t);s("./node_modules/animate.css/animate.min.css"),s("./node_modules/@fortawesome/fontawesome-free/css/all.min.css"),s("./node_modules/bootstrap/dist/js/bootstrap.esm.js"),s("./node_modules/jquery-parallax.js/parallax.js");var r=s("./src/animate-effect.js"),n=s("./src/scroll.js");s.e("src_assets_fonts_Play_css").then(s.bind(s,"./src/assets/fonts/Play.css")),s.e("src_assets_css_custom_scss").then(s.bind(s,"./src/assets/css/custom.scss")),s.e("src_assets_css_custom_css").then(s.bind(s,"./src/assets/css/custom.css")),s.e("src_assets_css_bootstrap_css").then(s.bind(s,"./src/assets/css/bootstrap.css"));var o=function(){var e=document.getElementById("pageLoader"),t=setInterval((function(){var s,r;e.style.opacity||(e.style.visibility="visible",e.style.opacity=1),e.style.opacity>0?e.style.opacity-=.1:(document.getElementById("pageLoader").style.visibility="hidden",document.body.style.overflowY="auto",document.body.style.height="100%",clearInterval(t),s=(new Date).getFullYear(),(r=document.getElementById("cYear"))&&(r.innerHTML=s),a())}),200)},a=function(){var e=document.getElementById("wrapper");e.style.opacity=0,e.style.visibility="visible";var t=0,s=setInterval((function(){t<1?(t+=.1,e.style.opacity=t):clearInterval(s)}),200)};window.addEventListener("DOMContentLoaded",(function(){o()})),(0,n.scroll)(),(0,r.animateEffect)()},"./src/scroll.js":(e,t,s)=>{s.r(t),s.d(t,{scroll:()=>n});var r=s("./node_modules/jquery/dist/jquery.js"),n=function(){r(".scroll-down").on("click",(function(){return r("html, body").animate({scrollTop:r("section.grace-hopper-quote").offset().top},"slow"),!1}))}}},n={};function o(e){var t=n[e];if(void 0!==t)return t.exports;var s=n[e]={exports:{}};return r[e].call(s.exports,s,s.exports,o),s.exports}o.m=r,e=[],o.O=(t,s,r,n)=>{if(!s){var a=1/0;for(d=0;d<e.length;d++){for(var[s,r,n]=e[d],i=!0,c=0;c<s.length;c++)(!1&n||a>=n)&&Object.keys(o.O).every((e=>o.O[e](s[c])))?s.splice(c--,1):(i=!1,n<a&&(a=n));if(i){e.splice(d--,1);var l=r();void 0!==l&&(t=l)}}return t}n=n||0;for(var d=e.length;d>0&&e[d-1][2]>n;d--)e[d]=e[d-1];e[d]=[s,r,n]},o.F={},o.E=e=>{Object.keys(o.F).map((t=>{o.F[t](e)}))},o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var s in t)o.o(t,s)&&!o.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},o.f={},o.e=e=>Promise.all(Object.keys(o.f).reduce(((t,s)=>(o.f[s](e,t),t)),[])),o.u=e=>e+".bundle.js",o.miniCssF=e=>e+".css",o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),t={},s="michelle-updated-website:",o.l=(e,r,n,a)=>{if(t[e])t[e].push(r);else{var i,c;if(void 0!==n)for(var l=document.getElementsByTagName("script"),d=0;d<l.length;d++){var u=l[d];if(u.getAttribute("src")==e||u.getAttribute("data-webpack")==s+n){i=u;break}}i||(c=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,o.nc&&i.setAttribute("nonce",o.nc),i.setAttribute("data-webpack",s+n),i.src=e),t[e]=[r];var m=(s,r)=>{i.onerror=i.onload=null,clearTimeout(p);var n=t[e];if(delete t[e],i.parentNode&&i.parentNode.removeChild(i),n&&n.forEach((e=>e(r))),s)return s(r)},p=setTimeout(m.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=m.bind(null,i.onerror),i.onload=m.bind(null,i.onload),c&&document.head.appendChild(i)}},o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;o.g.importScripts&&(e=o.g.location+"");var t=o.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var s=t.getElementsByTagName("script");s.length&&(e=s[s.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=e})(),(()=>{if("undefined"!=typeof document){var e=e=>new Promise(((t,s)=>{var r=o.miniCssF(e),n=o.p+r;if(((e,t)=>{for(var s=document.getElementsByTagName("link"),r=0;r<s.length;r++){var n=(a=s[r]).getAttribute("data-href")||a.getAttribute("href");if("stylesheet"===a.rel&&(n===e||n===t))return a}var o=document.getElementsByTagName("style");for(r=0;r<o.length;r++){var a;if((n=(a=o[r]).getAttribute("data-href"))===e||n===t)return a}})(r,n))return t();((e,t,s,r,n)=>{var o=document.createElement("link");o.rel="stylesheet",o.type="text/css",o.onerror=o.onload=s=>{if(o.onerror=o.onload=null,"load"===s.type)r();else{var a=s&&("load"===s.type?"missing":s.type),i=s&&s.target&&s.target.href||t,c=new Error("Loading CSS chunk "+e+" failed.\n("+i+")");c.code="CSS_CHUNK_LOAD_FAILED",c.type=a,c.request=i,o.parentNode&&o.parentNode.removeChild(o),n(c)}},o.href=t,s?s.parentNode.insertBefore(o,s.nextSibling):document.head.appendChild(o)})(e,n,null,t,s)})),t={main:0};o.f.miniCss=(s,r)=>{t[s]?r.push(t[s]):0!==t[s]&&{src_assets_fonts_Play_css:1,src_assets_css_custom_scss:1,src_assets_css_custom_css:1,src_assets_css_bootstrap_css:1}[s]&&r.push(t[s]=e(s).then((()=>{t[s]=0}),(e=>{throw delete t[s],e})))}}})(),(()=>{var e={main:0};o.f.j=(t,s)=>{var r=o.o(e,t)?e[t]:void 0;if(0!==r)if(r)s.push(r[2]);else{var n=new Promise(((s,n)=>r=e[t]=[s,n]));s.push(r[2]=n);var a=o.p+o.u(t),i=new Error;o.l(a,(s=>{if(o.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var n=s&&("load"===s.type?"missing":s.type),a=s&&s.target&&s.target.src;i.message="Loading chunk "+t+" failed.\n("+n+": "+a+")",i.name="ChunkLoadError",i.type=n,i.request=a,r[1](i)}}),"chunk-"+t,t)}},o.F.j=t=>{if(!o.o(e,t)||void 0===e[t]){e[t]=null;var s=document.createElement("link");o.nc&&s.setAttribute("nonce",o.nc),s.rel="prefetch",s.as="script",s.href=o.p+o.u(t),document.head.appendChild(s)}},o.O.j=t=>0===e[t];var t=(t,s)=>{var r,n,[a,i,c]=s,l=0;if(a.some((t=>0!==e[t]))){for(r in i)o.o(i,r)&&(o.m[r]=i[r]);if(c)var d=c(o)}for(t&&t(s);l<a.length;l++)n=a[l],o.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return o.O(d)},s=self.webpackChunkmichelle_updated_website=self.webpackChunkmichelle_updated_website||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))})(),o.O(0,["main"],(()=>{["src_assets_fonts_Play_css","src_assets_css_custom_scss","src_assets_css_custom_css","src_assets_css_bootstrap_css"].map(o.E)}),5);var a=o.O(void 0,["vendors-node_modules_bootstrap_dist_js_bootstrap_esm_js-node_modules_jquery-parallax_js_paral-bafde5"],(()=>o("./src/index.js")));a=o.O(a)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,